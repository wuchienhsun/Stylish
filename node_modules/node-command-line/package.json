{
  "_args": [
    [
      {
        "raw": "node-command-line",
        "scope": null,
        "escapedName": "node-command-line",
        "name": "node-command-line",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/wuchienhsun/Desktop/week1part2"
    ]
  ],
  "_from": "node-command-line@latest",
  "_id": "node-command-line@1.0.2",
  "_inCache": true,
  "_location": "/node-command-line",
  "_nodeVersion": "6.2.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/node-command-line-1.0.2.tgz_1489411071410_0.3329223785549402"
  },
  "_npmUser": {
    "name": "shaishab",
    "email": "shaishab.cse@gmail.com"
  },
  "_npmVersion": "3.10.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-command-line",
    "scope": null,
    "escapedName": "node-command-line",
    "name": "node-command-line",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-command-line/-/node-command-line-1.0.2.tgz",
  "_shasum": "884ea62015709f14c23a54a15b3f9cb2e420a9a0",
  "_shrinkwrap": null,
  "_spec": "node-command-line",
  "_where": "/Users/wuchienhsun/Desktop/week1part2",
  "author": {
    "name": "shaishab.cse@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/shaishab/node-command-line/issues"
  },
  "dependencies": {
    "bluebird": "^3.4.7"
  },
  "description": "Simple command line interface to execute command from node environment with promise",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "884ea62015709f14c23a54a15b3f9cb2e420a9a0",
    "tarball": "https://registry.npmjs.org/node-command-line/-/node-command-line-1.0.2.tgz"
  },
  "gitHead": "68a076f4a7e7e87e92471f81ff571f2a2d7e8bab",
  "homepage": "https://github.com/shaishab/node-command-line#readme",
  "keywords": [
    "node",
    "command",
    "line",
    "cmd",
    "cli",
    "node command line",
    "node cli",
    "node cmd",
    "node-command-line"
  ],
  "license": "MIT",
  "main": "node-command-line.js",
  "maintainers": [
    {
      "name": "shaishab",
      "email": "shaishab.cse@gmail.com"
    }
  ],
  "name": "node-command-line",
  "optionalDependencies": {},
  "readme": "# node-command-line\r\nSimple node.js commandline or terminal interface to execute cli commands from node environment with/without promise\r\n\r\nusing _node-command-line_ you can run commands synchronously/asynchronously and get the output as a promise.\r\n\r\n#####npm info :    \r\n![node-command-line npm version](https://img.shields.io/npm/v/node-command-line.svg) ![total npm downloads for node-command-line](https://img.shields.io/npm/dt/node-command-line.svg) ![monthly npm downloads for node-command-line](https://img.shields.io/npm/dm/node-command-line.svg) ![npm licence for node-command-line](https://img.shields.io/npm/l/node-command-line.svg)\r\n\r\n##### GitHub Info:\r\n![node-command-line GitHub Release](https://img.shields.io/github/release/shaishab/node-command-line.svg) ![GitHub license node-command-line license](https://img.shields.io/github/license/shaishab/node-command-line.svg) ![open issues for node-command-line on GitHub](https://img.shields.io/github/issues/shaishab/node-command-line.svg)\r\n\r\n## Install the package\r\n```\r\n$ npm install --save node-command-line\r\n```\r\n\r\n##Method\r\n\r\n| method | argument | functionality |\r\n|---|---|---|\r\n| run  | command | run command synchronously/asynchronously based on using yield\r\n\r\n\r\n##Examples\r\n\r\nInject the dependencies \r\n\r\n```\r\nvar cmd     = require('node-command-line'),\r\n    Promise = require('bluebird');\r\n```\r\n\r\n**Execute the single command without wait** \r\n\r\n```\r\nfunction runSingleCommandWithoutWait() {\r\n  cmd.run('node --version');\r\n  console.log('Executed your command :)');\r\n}\r\n```\r\n\r\nIn this example run the command `node --version` that will show the node version and also print `Executed your command :)`.\r\n node version may shown after print `Executed your command :)` because of second command do not wait for executing the first command.\r\n\r\n**Output in console like:**\r\n \r\n```\r\n Executed your command :)\r\n \r\n v6.2.1\r\n \r\n```\r\n\r\n**Execute the single command with wait (using promise)** \r\n\r\n```\r\nfunction runSingleCommandWithWait() {\r\n  Promise.coroutine(function *() {\r\n    yield cmd.run('node --version');\r\n    console.log('Executed your command :)');\r\n  })();\r\n}\r\n```\r\n\r\nIn this example run the command `node --version` that will show the node version and also print `Executed your command :)`.\r\n node version will show before print `Executed your command :)` because of second command will execute after executing the first command.\r\n\r\n**Output in console like:**\r\n \r\n```\r\n v6.2.1\r\n \r\n Executed your command :)\r\n \r\n```\r\n\r\n\r\n**Execute the multiple command without wait** \r\n\r\n```\r\nfunction runMultipleCommandWithoutWait() {\r\n  Promise.coroutine(function *() {\r\n    var commands = [\"node --version\",\"npm --version\"];\r\n    for(var i=0; i < commands.length; i++) {\r\n      cmd.run(commands[i]);\r\n    }\r\n    console.log('Executed your command :)');\r\n  })();\r\n}\r\n```\r\n\r\nIn this example run the command `node --version` and `npm --version` that will show the node version and npm version also print `Executed your command :)`.\r\n node and npm version may shown after print `Executed your command :)` because of `console.log`` do not wait for executing the first two command.\r\n\r\n**Output in console like:**\r\n \r\n```\r\n Executed your command :)\r\n \r\n v6.2.1\r\n \r\n 3.10.2\r\n \r\n```\r\n\r\n**Execute the multiple command without wait** \r\n\r\n```\r\nfunction runMultipleCommandWithWait() {\r\n  Promise.coroutine(function *() {\r\n    var commands = [\"node --version\",\"npm --version\"];\r\n    for(var i=0; i < commands.length; i++) {\r\n      yield cmd.run(commands[i]);\r\n    }\r\n    console.log('Executed your command :)');\r\n  })();\r\n}\r\n```\r\n\r\nIn this example run the command `node --version` and `npm --version` that will show the node version and npm version also print `Executed your command :)`.\r\n node and npm version will show before print `Executed your command :)` because of `console.log`` will be waiting  for executing the first two command.\r\n\r\n**Output in console like:**\r\n \r\n```\r\n \r\n v6.2.1\r\n \r\n 3.10.2\r\n \r\n Executed your command :)\r\n \r\n```\r\n\r\n**Execute the single command with wait and get response (using yield)** \r\n\r\n```\r\nfunction runSingleCommandWithWait() {\r\n  Promise.coroutine(function *() {\r\n    var response = yield cmd.run('node --version');\r\n    if(response.success) {\r\n       // do something\r\n       // if success get stdout info in message. like response.message\r\n    } else {\r\n      // do something\r\n      // if not success get error message and stdErr info as error and stdErr. \r\n      //like response.error and response.stdErr\r\n    }\r\n    console.log('Executed your command :)');\r\n  })();\r\n}\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shaishab/node-command-line.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.2"
}
